Index: app/src/main/res/layout/activity_plan_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/white\"\r\n    tools:context=\".feature.plan.PlanDetailActivity\">\r\n\r\n    <include\r\n        android:id=\"@+id/toolbar\"\r\n        layout=\"@layout/toolbar\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <com.google.android.material.tabs.TabLayout\r\n        android:id=\"@+id/tab_layout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"24dp\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/button_add\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\"\r\n        app:tabIndicatorColor=\"@color/text_blue\"\r\n        app:tabMode=\"fixed\"\r\n        app:tabSelectedTextColor=\"@color/text_blue\"\r\n        app:tabTextAppearance=\"@style/TabText\"\r\n        app:tabTextColor=\"@color/icon_grey\"/>\r\n\r\n    <View\r\n        android:id=\"@+id/line\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0.5dp\"\r\n        android:background=\"@color/hint_grey\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/tab_layout\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/button_add\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"12dp\"\r\n        android:background=\"@null\"\r\n        android:contentDescription=\"@string/add\"\r\n        android:minWidth=\"0dp\"\r\n        android:minHeight=\"0dp\"\r\n        android:padding=\"12dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/tab_layout\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\"\r\n        app:srcCompat=\"@drawable/ic_add_24dp\" />\r\n\r\n    <androidx.viewpager2.widget.ViewPager2\r\n        android:id=\"@+id/view_pager2\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/line\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_plan_detail.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/layout/activity_plan_detail.xml	(date 1608486332305)
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@android:color/white"
-    tools:context=".feature.plan.PlanDetailActivity">
+    tools:context=".feature.plan.detail.PlanDetailActivity">
 
     <include
         android:id="@+id/toolbar"
@@ -17,7 +17,7 @@
         app:layout_constraintTop_toTopOf="parent" />
 
     <com.google.android.material.tabs.TabLayout
-        android:id="@+id/tab_layout"
+        android:id="@+id/tabs"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
@@ -39,7 +39,7 @@
         android:background="@color/hint_grey"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/tab_layout" />
+        app:layout_constraintTop_toBottomOf="@+id/tabs" />
 
     <ImageButton
         android:id="@+id/button_add"
@@ -52,7 +52,7 @@
         android:minHeight="0dp"
         android:padding="12dp"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toEndOf="@+id/tab_layout"
+        app:layout_constraintStart_toEndOf="@+id/tabs"
         app:layout_constraintTop_toBottomOf="@+id/toolbar"
         app:srcCompat="@drawable/ic_add_24dp" />
 
Index: app/src/main/java/com/example/travellet/feature/sign/SignUp2Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.sign;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.travellet.R;\r\nimport com.example.travellet.data.requestBody.SignUpData;\r\nimport com.example.travellet.data.StatusResponse;\r\nimport com.example.travellet.databinding.ActivitySignUp2Binding;\r\nimport com.example.travellet.feature.util.BaseActivity;\r\nimport com.example.travellet.network.RetrofitClient;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Objects;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-18.\r\n * Class: SignUp2Activity\r\n * Description: 회원가입2 클래스\r\n */\r\npublic class SignUp2Activity extends BaseActivity {\r\n    private ActivitySignUp2Binding binding;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        //다이얼로그 설정\r\n        setCountryAlertDialog();\r\n    }\r\n\r\n    @Override //Activity 뷰 바인딩\r\n    protected View getLayoutResource() {\r\n        binding = ActivitySignUp2Binding.inflate(getLayoutInflater());\r\n        return binding.getRoot();\r\n    }\r\n\r\n    //회원가입 요청 - POST : Retrofit2\r\n    private void reqeustSignUp(SignUpData data) {\r\n        RetrofitClient.getService().signUp(data).enqueue(new Callback<StatusResponse>() {\r\n            @Override\r\n            public void onResponse(@NotNull Call<StatusResponse> call, @NotNull Response<StatusResponse> response) {\r\n                if(response.isSuccessful() && response.body() != null) { //상태코드 200~300일 경우 (요청 성공 시)\r\n                    StatusResponse result = response.body();\r\n                    Toast.makeText(SignUp2Activity.this, result.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    //로그인 페이지로 이동\r\n                    Intent intent = new Intent(SignUp2Activity.this, SignInActivity.class);\r\n                    //회원가입 엑티비티 스택에서 제거하고 로그인만 남김\r\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(@NotNull Call<StatusResponse> call, @NotNull Throwable t) {\r\n                Toast.makeText(SignUp2Activity.this, \"회원가입 에러\", Toast.LENGTH_SHORT).show();\r\n                Log.e(\"회원가입 에러\", Objects.requireNonNull(t.getMessage()));\r\n            }\r\n        });\r\n    }\r\n\r\n    //Country 다이얼로그 설정\r\n    void setCountryAlertDialog() {\r\n        //String-Array -> ArrayList로 변환\r\n        ArrayList<String> arrayListCountry =\r\n                new ArrayList<>(Arrays.asList(getResources().getStringArray(R.array.country)));\r\n        //Country 다이얼로그 구현\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.AlertDialog);\r\n        builder.setItems(R.array.country, (dialog, which) ->\r\n                binding.buttonCountry.setText(arrayListCountry.get(which)));\r\n        //Country 버튼 이벤트\r\n        binding.buttonCountry.setOnClickListener(v -> {\r\n            AlertDialog alertDialog = builder.create();\r\n            alertDialog.show();\r\n        });\r\n    }\r\n\r\n    //Ok 버튼 클릭 이벤트 : 로그인 페이지로 이동\r\n    public void okButtonClick(View view){\r\n        //Success\r\n        if(binding.editTextName.getText().length() > 0 && binding.buttonCountry.getText().length() > 0){\r\n            String email, pwd, name, country;\r\n\r\n            //회원가입1 페이지 데이터 받기\r\n            Intent intent = getIntent();\r\n            email = intent.getStringExtra(\"email\");\r\n            pwd = intent.getStringExtra(\"pwd\");\r\n\r\n            //비밀번호 암호화\r\n            String encryptPwd = EncryptSHA512.encryptSHA512(pwd);\r\n\r\n            //이름, 국가\r\n            name = binding.editTextName.getText().toString();\r\n            country = binding.buttonCountry.getText().toString();\r\n\r\n            //테스트 코드 => 추후 삭제\r\n            Log.d(\"이메일\", email);\r\n            Log.d(\"비밀번호\", encryptPwd);\r\n            Log.d(\"이름\", name);\r\n            Log.d(\"국가\", country);\r\n\r\n            //회원가입 요청 메소드 호출\r\n            reqeustSignUp(new SignUpData(email, encryptPwd, name, country));\r\n\r\n        } else { //Fail\r\n            Toast.makeText(getApplicationContext(), \"Please complete the entry!\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    //SignIn 버튼 클릭 이벤트 : 로그인 페이지로 이동\r\n    public void signInButtonClick(View view){\r\n        Intent intent = new Intent(this, SignInActivity.class);\r\n        //스택 비우고 로그인만 남김\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/sign/SignUp2Activity.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/sign/SignUp2Activity.java	(date 1609056785667)
@@ -80,10 +80,8 @@
         builder.setItems(R.array.country, (dialog, which) ->
                 binding.buttonCountry.setText(arrayListCountry.get(which)));
         //Country 버튼 이벤트
-        binding.buttonCountry.setOnClickListener(v -> {
-            AlertDialog alertDialog = builder.create();
-            alertDialog.show();
-        });
+        final AlertDialog alertDialog = builder.create();
+        binding.buttonCountry.setOnClickListener(v -> alertDialog.show());
     }
 
     //Ok 버튼 클릭 이벤트 : 로그인 페이지로 이동
@@ -104,12 +102,6 @@
             name = binding.editTextName.getText().toString();
             country = binding.buttonCountry.getText().toString();
 
-            //테스트 코드 => 추후 삭제
-            Log.d("이메일", email);
-            Log.d("비밀번호", encryptPwd);
-            Log.d("이름", name);
-            Log.d("국가", country);
-
             //회원가입 요청 메소드 호출
             reqeustSignUp(new SignUpData(email, encryptPwd, name, country));
 
Index: app/src/main/java/com/example/travellet/feature/util/TravelUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/TravelUtil.java	(date 1609081036727)
+++ app/src/main/java/com/example/travellet/feature/util/TravelUtil.java	(date 1609081036727)
@@ -0,0 +1,105 @@
+package com.example.travellet.feature.util;
+
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Locale;
+
+/**
+ * Created by 수연 on 2020-12-21.
+ * Class: TravelUtil
+ * Description: 여행 목록 조회 관련 유틸들
+ */
+public class TravelUtil {
+    String mStrFormat = null;
+
+    //날짜 형식 변경 (yyyy-mm-dd => mm/dd/yyyy)
+    public String dateFormat(String target) {
+        try {
+            //문자열을 파싱해서 원하는 날짜 형식으로 변환
+            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yyyy", Locale.getDefault());
+            Date date = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).parse(target);
+
+            assert date != null;
+            return simpleDateFormat.format(date);
+
+        } catch (ParseException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    //시작일-종료일 (mm/dd/yyyy-mm/dd/yyyy)
+    public String getDate(String start, String end) {
+        mStrFormat = "%s-%s";
+        String startDate = dateFormat(start);
+        String endDate = dateFormat(end);
+        return String.format(Locale.getDefault(), mStrFormat, startDate, endDate);
+    }
+
+    //D-DAY 계산 (D-0/D-DAY/D+0)
+    public String getDday(String target) {
+        try{
+            String[] arr = target.split("-");
+
+            Calendar todayCal = Calendar.getInstance(); //현재 날짜 가져오기
+            Calendar ddayCal = Calendar.getInstance(); //디데이 초기화
+
+            int year = Integer.parseInt(arr[0]);
+            int moth = Integer.parseInt(arr[1]) -1;
+            int day = Integer.parseInt(arr[2]);
+            ddayCal.set(year, moth, day);
+
+            //밀리 초 -> 초로 변환
+            final int ONE_DAY = 24 * 60 * 60 * 1000;
+            long dday = ddayCal.getTimeInMillis()/ ONE_DAY;
+            long today = todayCal.getTimeInMillis()/ ONE_DAY;
+
+            long result = dday - today;
+
+            if(result > 0)
+                mStrFormat = "D-%d";
+            else if(result == 0)
+                mStrFormat = "D-DAY";
+            else {
+                result *= -1;
+                mStrFormat = "D+%d";
+            }
+            return String.format(mStrFormat, result);
+            
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    //지출 퍼센트 계산
+    public int getProgress(Double budget, Double sumBudget, Double sumExpense) {
+        return budget >= sumBudget ? (int)((sumExpense/budget)*100) : (int)((sumExpense/sumBudget)*100);
+    }
+
+    //지출 금액 (expense of total budget)
+    public String getExpense(Double budget, Double sumBudget, Double sumExpense) {
+        mStrFormat = "￦%,.0f of ￦%,.0f"; //3자리마다 , 표시
+        if(budget >= sumBudget)
+            return String.format(Locale.getDefault(), mStrFormat, sumExpense, budget);
+        else //여행 생성 시 입력값보다 실제 입력한 예산의 합이 클 경우
+            return String.format(Locale.getDefault(), mStrFormat, sumExpense, sumBudget);
+    }
+
+    //지출 퍼센트 (0%)
+    public String getExpensePercent(Double budget, Double sumBudget, Double sumExpense) {
+        return String.format(Locale.getDefault(), "%d%%", getProgress(budget, sumBudget, sumExpense));
+    }
+
+    //오늘 날짜 가져오기 (yyyy-mm-dd)
+    public String getToday() {
+        //현재 시간 가져오기
+        long now = System.currentTimeMillis();
+        //Date 형변환
+        Date date = new Date(now);
+        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
+        return simpleDateFormat.format(date);
+    }
+}
Index: app/src/main/java/com/example/travellet/feature/util/ErrorBodyManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.util;\r\n\r\nimport com.example.travellet.data.StatusResponse;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.IOException;\r\n\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * Created by 수연 on 2020-12-11.\r\n * Class: ErrrorManager\r\n * Description: Retrofit2의 errorBody를 StatusResponse 클래스 형태로 파싱함.\r\n * Retrofit2의 responseBodyConverter를 활용하는 방법도 있지만,\r\n * 여기서는 그냥 단순하게 Gson을 활용해서 Json을 파싱함.\r\n */\r\npublic class ErrorBodyManager {\r\n    public static StatusResponse parseError(Response<?> response) {\r\n        StatusResponse statusResponse = null;\r\n        try {\r\n            statusResponse = new Gson().fromJson(response.errorBody().string(), StatusResponse.class);\r\n        } catch (IOException e) {\r\n            new StatusResponse();\r\n        }\r\n        return statusResponse;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/ErrorBodyManager.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/util/ErrorBodyManager.java	(date 1608715914307)
@@ -18,6 +18,7 @@
     public static StatusResponse parseError(Response<?> response) {
         StatusResponse statusResponse = null;
         try {
+            assert response.errorBody() != null;
             statusResponse = new Gson().fromJson(response.errorBody().string(), StatusResponse.class);
         } catch (IOException e) {
             new StatusResponse();
Index: app/src/main/res/values/array.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <!--  회원가입2 : 국가  -->\r\n    <string-array name=\"country\">\r\n        <item>Australia</item>\r\n        <item>Canada</item>\r\n        <item>China</item>\r\n        <item>France</item>\r\n        <item>Germany</item>\r\n        <item>HongKong</item>\r\n        <item>India</item>\r\n        <item>Indonesia</item>\r\n        <item>Japan</item>\r\n        <item>Malaysia</item>\r\n        <item>MiddleEast</item>\r\n        <item>Philippines</item>\r\n        <item>Russia</item>\r\n        <item>Singapore</item>\r\n        <item>Taipei</item>\r\n        <item>Thailand</item>\r\n        <item>U.S.A</item>\r\n        <item>U.K</item>\r\n        <item>Vietnam</item>\r\n    </string-array>\r\n    <!-- 수정/삭제  -->\r\n    <string-array name=\"edit_delete\">\r\n        <item>Edit</item>\r\n        <item>Delete</item>\r\n    </string-array>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/array.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/values/array.xml	(date 1609121075614)
@@ -27,4 +27,8 @@
         <item>Edit</item>
         <item>Delete</item>
     </string-array>
+    <!--  삭제  -->
+    <string-array name="delete">
+        <item>Delete</item>
+    </string-array>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/feature/travel/TravelAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.travel;\r\n\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-22.\r\n * Class: TravelAdapter\r\n * Description: 여행 목록 리사이클러뷰 어댑터\r\n */\r\npublic class TravelAdapter extends RecyclerView.Adapter<TravelAdapter.ViewHolder> {\r\n\r\n    //아이템 뷰를 저장하는 뷰 홀더 클래스\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n        }\r\n    }\r\n\r\n    //아이템 뷰를 위한 뷰 홀더 객체 생성하여 리턴\r\n    @NonNull\r\n    @Override\r\n    public TravelAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        return null;\r\n    }\r\n\r\n    //position에 해당하는 데이터를 뷰 홀더의 아이템 뷰에 표시\r\n    @Override\r\n    public void onBindViewHolder(@NonNull TravelAdapter.ViewHolder holder, int position) {\r\n\r\n    }\r\n\r\n\r\n    //리사클러뷰 아이템 개수 리턴 : 필수적으로 지정해주어야 함!\r\n    @Override\r\n    public int getItemCount() {\r\n        return 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/travel/TravelAdapter.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/travel/TravelAdapter.java	(date 1609123206599)
@@ -1,22 +1,50 @@
 package com.example.travellet.feature.travel;
 
-import android.view.View;
+import android.app.AlertDialog;
+import android.content.Intent;
+import android.util.Log;
+import android.view.LayoutInflater;
 import android.view.ViewGroup;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.example.travellet.R;
+import com.example.travellet.data.StatusResponse;
+import com.example.travellet.data.responseBody.TravelReadResponse;
+import com.example.travellet.databinding.ItemTravelBinding;
+import com.example.travellet.feature.plan.PlanActivity;
+import com.example.travellet.feature.util.TravelUtil;
+import com.example.travellet.network.RetrofitClient;
+
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.Objects;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
 /**
  * Created by 수연 on 2020-11-22.
  * Class: TravelAdapter
  * Description: 여행 목록 리사이클러뷰 어댑터
+ * => viewbinding을 사용하였음!
  */
 public class TravelAdapter extends RecyclerView.Adapter<TravelAdapter.ViewHolder> {
+    private final ArrayList<TravelReadResponse.Datum> data;
+
+    public TravelAdapter(ArrayList<TravelReadResponse.Datum> data) {
+        this.data = data;
+    }
 
     //아이템 뷰를 저장하는 뷰 홀더 클래스
-    public class ViewHolder extends RecyclerView.ViewHolder{
-        public ViewHolder(@NonNull View itemView) {
-            super(itemView);
+    public static class ViewHolder extends RecyclerView.ViewHolder{
+        ItemTravelBinding binding;
+        public ViewHolder(@NonNull ItemTravelBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
         }
     }
 
@@ -24,19 +52,68 @@
     @NonNull
     @Override
     public TravelAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-        return null;
+        return new ViewHolder(ItemTravelBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
     }
 
     //position에 해당하는 데이터를 뷰 홀더의 아이템 뷰에 표시
     @Override
     public void onBindViewHolder(@NonNull TravelAdapter.ViewHolder holder, int position) {
+        //출력 형식 변환 관련 유틸
+        TravelUtil travelUtil = new TravelUtil();
+
+        //각 데이터 항목 get
+        String title = data.get(position).getTitle();
+        String startDate = data.get(position).getStartDate();
+        String endDate = data.get(position).getEndDate();
+        Double budget = data.get(position).getBudget();
+        Double sumBudget = data.get(position).getSumBudget();
+        Double sumExpense = data.get(position).getSumExpense();
 
+        //출력 형식 변환 관련 유틸로 변환 후, setText
+        holder.binding.textViewTitle.setText(title);
+        holder.binding.textViewDate.setText(travelUtil.getDate(startDate, endDate));
+        holder.binding.textViewDday.setText(travelUtil.getDday(startDate));
+        holder.binding.progressBarExpense.setProgress(travelUtil.getProgress(budget, sumBudget, sumExpense));
+        holder.binding.textViewExpense.setText(travelUtil.getExpense(budget, sumBudget, sumExpense));
+        holder.binding.textViewExpensePercent.setText(travelUtil.getExpensePercent(budget, sumBudget, sumExpense));
+
+        //아이템 클릭 리스너
+        holder.itemView.setOnClickListener(v -> {
+            //아이템 클릭 이벤트: 일정 페이지로 이동 (travel_id 함께 전달)
+            Intent intent = new Intent(v.getContext(), PlanActivity.class);
+            intent.putExtra("travel_id", data.get(position).getId());
+            v.getContext().startActivity(intent);
+        });
+        //아이템 롱 클릭 리스너
+        holder.itemView.setOnLongClickListener(v -> {
+            AlertDialog.Builder builder = new AlertDialog.Builder(v.getContext());
+            builder.setItems(R.array.delete, ((dialog, which) -> requestDeleteTravel(data.get(position).getId())));
+            final AlertDialog alertDialog = builder.create();
+            alertDialog.show();
+            return false;
+        });
     }
-
 
     //리사클러뷰 아이템 개수 리턴 : 필수적으로 지정해주어야 함!
     @Override
     public int getItemCount() {
-        return 0;
+        return data.size();
     }
-}
+
+    //여행 삭제 요청 - DELTE : Retrofit2
+    private void requestDeleteTravel(int id) {
+        RetrofitClient.getService().deleteTravel(id).enqueue(new Callback<StatusResponse>() {
+            @Override
+            public void onResponse(@NotNull Call<StatusResponse> call, @NotNull Response<StatusResponse> response) {
+                if(response.isSuccessful() && response.body() != null) {
+                    StatusResponse result = response.body();
+                }
+            }
+
+            @Override
+            public void onFailure(@NotNull Call<StatusResponse> call, @NotNull Throwable t) {
+                Log.d("여행 삭제 에러", Objects.requireNonNull(t.getMessage()));
+            }
+        });
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/feature/travel/TravelActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.travel;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.example.travellet.R;\r\nimport com.example.travellet.databinding.ActivityTravelBinding;\r\nimport com.example.travellet.feature.place.PlaceActivity;\r\nimport com.example.travellet.feature.setting.SettingActivity;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-22.\r\n * Class: TravelActivity\r\n * Description: 메인 클래스 (미완성)\r\n * 로그인 후 바로 보이는 메인 화면으로 여행 목록를 담고 있음.\r\n */\r\npublic class TravelActivity extends AppCompatActivity {\r\n    private ActivityTravelBinding binding; //바인딩 선언\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        //Activity 뷰 바인딩\r\n        binding = ActivityTravelBinding.inflate(getLayoutInflater());\r\n        View view = binding.getRoot();\r\n        setContentView(view);\r\n    }\r\n\r\n    //Upcoming 목록 요청 - GET : Retrofit2 => 미완성 코드\r\n    void requestUpcoming() {\r\n        \r\n    }\r\n    \r\n    //Past 목록 요청 메소드 호출 - GET : Retrofit2 => 미완성 코드\r\n    void requestPast() {\r\n\r\n    }\r\n\r\n    //Upcoming 버튼 클릭 이벤트\r\n    public void upcomingButtonClick(View view) {\r\n        //버튼 선택 시 Underline 및 text color 변경\r\n        binding.buttonUpcoming.setBackgroundResource(R.drawable.bg_underline_gradation);\r\n        binding.buttonUpcoming.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.text_blue));\r\n        binding.buttonPast.setBackgroundColor(Color.WHITE);\r\n        binding.buttonPast.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.icon_grey));\r\n\r\n        //Upcoming 목록 요청 메소드 호출\r\n//        requestUpcoming();\r\n    }\r\n\r\n    //Past 버튼 클릭 이벤트\r\n    public void pastButtonClick(View view) {\r\n        //버튼 선택 시 Underline 및 text color 변경\r\n        binding.buttonUpcoming.setBackgroundColor(Color.WHITE);\r\n        binding.buttonUpcoming.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.icon_grey));\r\n        binding.buttonPast.setBackgroundResource(R.drawable.bg_underline_gradation);\r\n        binding.buttonPast.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.text_blue));\r\n\r\n        //Past 목록 요청 메소드 호출\r\n//        requestPast();\r\n    }\r\n\r\n    //Add 버튼 클릭 이벤트 : 여행 추가 페이지로 이동\r\n    public void addButtonClick(View view) {\r\n        Intent intent = new Intent(this, SetTitleActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    //Search 버튼 클릭 이벤트 : 장소 검색 페이지로 이동\r\n    public void searchButtonClick(View view) {\r\n        Intent intent = new Intent(this, PlaceActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    //Setting 버튼 클릭 이벤트 : 설정 페이지로 이동\r\n    public void settingButtonClick(View view) {\r\n        Intent intent = new Intent(this, SettingActivity.class);\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/travel/TravelActivity.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/travel/TravelActivity.java	(date 1609121472682)
@@ -1,25 +1,42 @@
 package com.example.travellet.feature.travel;
 
 import android.content.Intent;
-import android.graphics.Color;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.core.content.ContextCompat;
 
-import com.example.travellet.R;
+import com.example.travellet.data.responseBody.TravelReadResponse;
 import com.example.travellet.databinding.ActivityTravelBinding;
 import com.example.travellet.feature.place.PlaceActivity;
 import com.example.travellet.feature.setting.SettingActivity;
+import com.example.travellet.feature.util.ProgressBarManager;
+import com.example.travellet.feature.util.TravelUtil;
+import com.example.travellet.feature.util.viewpager.ViewPagerAdapter;
+import com.example.travellet.feature.util.viewpager.ViewPagerCase;
+import com.example.travellet.feature.util.viewpager.ViewPagerData;
+import com.example.travellet.network.RetrofitClient;
+import com.google.android.material.tabs.TabLayoutMediator;
+
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.Objects;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
 
 /**
  * Created by 수연 on 2020-11-22.
  * Class: TravelActivity
- * Description: 메인 클래스 (미완성)
+ * Description: 메인 클래스
  * 로그인 후 바로 보이는 메인 화면으로 여행 목록를 담고 있음.
  */
 public class TravelActivity extends AppCompatActivity {
+    private final String[] TABS = {"upcoming", "past"}; //탭 선언
+    ArrayList<ViewPagerData> mList = new ArrayList<>(); //뷰페이저 리스트
     private ActivityTravelBinding binding; //바인딩 선언
 
     @Override
@@ -29,57 +46,80 @@
         binding = ActivityTravelBinding.inflate(getLayoutInflater());
         View view = binding.getRoot();
         setContentView(view);
-    }
 
-    //Upcoming 목록 요청 - GET : Retrofit2 => 미완성 코드
-    void requestUpcoming() {
-        
-    }
-    
-    //Past 목록 요청 메소드 호출 - GET : Retrofit2 => 미완성 코드
-    void requestPast() {
-
+        requestUpcoming(); //여행 목록 조회 요청(Upcoming)
+        requestPast(); //여행 목록 조회 요청(Past)
+        initButton(); //버튼 클릭 이벤트 설정
     }
 
-    //Upcoming 버튼 클릭 이벤트
-    public void upcomingButtonClick(View view) {
-        //버튼 선택 시 Underline 및 text color 변경
-        binding.buttonUpcoming.setBackgroundResource(R.drawable.bg_underline_gradation);
-        binding.buttonUpcoming.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.text_blue));
-        binding.buttonPast.setBackgroundColor(Color.WHITE);
-        binding.buttonPast.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.icon_grey));
-
-        //Upcoming 목록 요청 메소드 호출
-//        requestUpcoming();
-    }
-
-    //Past 버튼 클릭 이벤트
-    public void pastButtonClick(View view) {
-        //버튼 선택 시 Underline 및 text color 변경
-        binding.buttonUpcoming.setBackgroundColor(Color.WHITE);
-        binding.buttonUpcoming.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.icon_grey));
-        binding.buttonPast.setBackgroundResource(R.drawable.bg_underline_gradation);
-        binding.buttonPast.setTextColor(ContextCompat.getColor(getApplicationContext(),R.color.text_blue));
-
-        //Past 목록 요청 메소드 호출
-//        requestPast();
-    }
-
-    //Add 버튼 클릭 이벤트 : 여행 추가 페이지로 이동
-    public void addButtonClick(View view) {
-        Intent intent = new Intent(this, SetTitleActivity.class);
-        startActivity(intent);
-    }
-
-    //Search 버튼 클릭 이벤트 : 장소 검색 페이지로 이동
-    public void searchButtonClick(View view) {
-        Intent intent = new Intent(this, PlaceActivity.class);
-        startActivity(intent);
-    }
-
-    //Setting 버튼 클릭 이벤트 : 설정 페이지로 이동
-    public void settingButtonClick(View view) {
-        Intent intent = new Intent(this, SettingActivity.class);
-        startActivity(intent);
+    //버튼 클릭 이벤트 설정
+    private void initButton() {
+        //Add 버튼 클릭 이벤트 : 여행 추가 페이지로 이동
+        binding.buttonAdd.setOnClickListener(v -> {
+            Intent intent = new Intent(this, SetTitleActivity.class);
+            startActivity(intent);
+        });
+        //Search 버튼 클릭 이벤트 : 장소 검색 페이지로 이동
+        binding.buttonSearch.setOnClickListener(v -> {
+            Intent intent = new Intent(this, PlaceActivity.class);
+            startActivity(intent);
+        });
+        //Setting 버튼 클릭 이벤트 : 설정 페이지로 이동
+        binding.buttonSetting.setOnClickListener(v -> {
+            Intent intent = new Intent(this, SettingActivity.class);
+            startActivity(intent);
+        });
+    }
+
+    //리사이클러뷰 어댑터 설정
+    private void setTravelList(ArrayList<TravelReadResponse.Datum> data) {
+        //어댑터 설정 + 뷰페이저/탭 스와이프 설정
+        mList.add(new ViewPagerData(TravelActivity.this, data));
+        binding.viewPager2.setAdapter(new ViewPagerAdapter(mList, ViewPagerCase.TRAVEL));
+        new TabLayoutMediator(binding.tabs, binding.viewPager2, (tab, position) -> tab.setText(TABS[position])).attach();
+    }
+
+    //여행 목록 조회 요청(Upcoming) - GET : Retrofit2
+    private void requestUpcoming() {
+        ProgressBarManager.showProgress(binding.progressBar, true);
+        RetrofitClient.getService().readTravelUpcoming(new TravelUtil().getToday()).enqueue(new Callback<TravelReadResponse>() {
+            @Override
+            public void onResponse(@NotNull Call<TravelReadResponse> call, @NotNull Response<TravelReadResponse> response) {
+                if(response.isSuccessful() && response.body() != null) {
+                    TravelReadResponse result = response.body();
+                    //비동기 처리 완료 여부를 받는 것을 몰라서 중복으로 처리했는데 이게 맞는 것 같지는 않음.
+                    setTravelList(new ArrayList<>(result.getData())); //더 좋은 방법이 있다면 알고 싶다!!!
+                }
+                ProgressBarManager.showProgress(binding.progressBar, false);
+            }
+
+            @Override
+            public void onFailure(@NotNull Call<TravelReadResponse> call, @NotNull Throwable t) {
+                Log.e("여행 목록 조회 에러", Objects.requireNonNull(t.getMessage()));
+                ProgressBarManager.showProgress(binding.progressBar, false);
+            }
+        });
+    }
+
+    //여행 목록 조회 요청(Past) - GET : Retrofit2
+    private void requestPast() {
+        ProgressBarManager.showProgress(binding.progressBar, true);
+        RetrofitClient.getService().readTravelPast(new TravelUtil().getToday()).enqueue(new Callback<TravelReadResponse>() {
+            @Override
+            public void onResponse(@NotNull Call<TravelReadResponse> call, @NotNull Response<TravelReadResponse> response) {
+                if(response.isSuccessful() && response.body() != null) {
+                    TravelReadResponse result = response.body();
+                    //비동기 처리 완료 여부를 받는 것을 몰라서 중복으로 처리했는데 이게 맞는 것 같지는 않음.
+                    setTravelList(new ArrayList<>(result.getData())); //더 좋은 방법이 있다면 알고 싶다!!!
+                }
+                ProgressBarManager.showProgress(binding.progressBar, false);
+            }
+
+            @Override
+            public void onFailure(@NotNull Call<TravelReadResponse> call, @NotNull Throwable t) {
+                Log.e("여행 목록 조회 에러", Objects.requireNonNull(t.getMessage()));
+                ProgressBarManager.showProgress(binding.progressBar, false);
+            }
+        });
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/feature/setting/SettingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.setting;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.travellet.R;\r\nimport com.example.travellet.data.StatusResponse;\r\nimport com.example.travellet.data.requestBody.ProfileData;\r\nimport com.example.travellet.data.responseBody.ProfileResponse;\r\nimport com.example.travellet.databinding.ActivitySettingBinding;\r\nimport com.example.travellet.feature.sign.SignInActivity;\r\nimport com.example.travellet.feature.util.BaseActivity;\r\nimport com.example.travellet.feature.util.ErrorBodyManager;\r\nimport com.example.travellet.feature.util.PreferenceManager;\r\nimport com.example.travellet.feature.util.ProgressBarManager;\r\nimport com.example.travellet.network.RetrofitClient;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Objects;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-18.\r\n * Class: SettingActivity (기능 미완료)\r\n * Description: 마이페이지 클래스\r\n * 사용자 정보에 대한 READ, UPDATE, DELETE 가능\r\n * => 이름 다이얼로그 디자인 수정 필요!!\r\n */\r\npublic class SettingActivity extends BaseActivity {\r\n    private ActivitySettingBinding binding; //바인딩 선언\r\n    private String mName, mCountry;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        //다이얼로그 구현\r\n        setNameAlertDialog();\r\n        setCountryAlertDialog();\r\n\r\n        //회원정보 요청 메소드 호출\r\n        requestReadProfile();\r\n        ProgressBarManager.showProgress(binding.progressBar, true);\r\n    }\r\n\r\n    @Override //Activity 뷰 바인딩\r\n    protected View getLayoutResource() {\r\n        binding = ActivitySettingBinding.inflate(getLayoutInflater());\r\n        return binding.getRoot();\r\n    }\r\n\r\n    //회원정보 요청 - GET : Retroifit2\r\n    private void requestReadProfile() {\r\n        RetrofitClient.getService().readProfile().enqueue(new Callback<ProfileResponse>() {\r\n            @Override\r\n            public void onResponse(@NotNull Call<ProfileResponse> call, @NotNull Response<ProfileResponse> response) {\r\n                if(response.isSuccessful() && response.body() != null) { //상태코드 200~300일 경우 (요청 성공 시)\r\n                    ProfileResponse result = response.body();\r\n                    //프로필 setText\r\n                    binding.textViewName.setText(result.getData().getName());\r\n                    binding.textViewCountry.setText(result.getData().getCountry());\r\n                    binding.textViewEmail.setText(result.getData().getEmail());\r\n                }\r\n                ProgressBarManager.showProgress(binding.progressBar, false);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(@NotNull Call<ProfileResponse> call, @NotNull Throwable t) {\r\n                Log.e(\"프로필 조회 에러\", Objects.requireNonNull(t.getMessage()));\r\n                ProgressBarManager.showProgress(binding.progressBar, false);\r\n            }\r\n        });\r\n    }\r\n\r\n    //회원탈퇴 요청 - DELETE : Retrofit2\r\n    private void requestDeleteProfile() {\r\n        RetrofitClient.getService().deleteProfile().enqueue(new Callback<StatusResponse>() {\r\n            @Override\r\n            public void onResponse(@NotNull Call<StatusResponse> call, @NotNull Response<StatusResponse> response) {\r\n                if(response.isSuccessful() && response.body() != null){\r\n                    StatusResponse result = response.body();\r\n                    Toast.makeText(SettingActivity.this, result.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    //로그인 페이지로 이동\r\n                    Intent intent = new Intent(SettingActivity.this, SignInActivity.class);\r\n                    //회원가입 엑티비티 스택에서 제거하고 로그인만 남김\r\n                    //TODO (suyeon) : 액티비티 스택 관련 조사 필요 => 제대로 된 코드 아닐 수도 있음.\r\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK| Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //회원탈퇴 실패 시 토스트 메세지\r\n                    StatusResponse result = ErrorBodyManager.parseError(response);\r\n                    Toast.makeText(SettingActivity.this, result.getMessage(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(@NotNull Call<StatusResponse> call, @NotNull Throwable t) {\r\n                Toast.makeText(SettingActivity.this, \"회원탈퇴 에러\", Toast.LENGTH_SHORT).show();\r\n                Log.e(\"회원탈퇴 에러\", Objects.requireNonNull(t.getMessage()));\r\n            }\r\n        });\r\n    }\r\n\r\n    //회원정보 수정 요청 - PUT : Retrofit2\r\n    private void requestUpdateProfile(ProfileData data) {\r\n        RetrofitClient.getService().updateProfile(data).enqueue(new Callback<StatusResponse>() {\r\n            @Override\r\n            public void onResponse(@NotNull Call<StatusResponse> call, @NotNull Response<StatusResponse> response) {\r\n                if(response.isSuccessful()){\r\n                    binding.textViewName.setText(mName);\r\n                    binding.textViewCountry.setText(mCountry);\r\n                } else {\r\n                    StatusResponse result = ErrorBodyManager.parseError(response);\r\n                    Toast.makeText(SettingActivity.this, result.getMessage(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(@NotNull Call<StatusResponse> call, @NotNull Throwable t) {\r\n                Toast.makeText(SettingActivity.this, \"회원정보 수정 에러\", Toast.LENGTH_SHORT).show();\r\n                Log.e(\"회원정보 수정 에러\", Objects.requireNonNull(t.getMessage()));\r\n            }\r\n        });\r\n    }\r\n\r\n    //TODO (suyeon) : 디자인 수정\r\n    //NameEdit 다이얼로그 설정\r\n    void setNameAlertDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        //EdiiText 설정\r\n        final EditText editText = new EditText(this);\r\n        editText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PERSON_NAME);\r\n        builder.setView(editText);\r\n        //다이얼로그 OK 버튼 클릭 이벤트\r\n        builder.setPositiveButton(\"OK\", (dialog, which) -> {\r\n            mName = editText.getText().toString();\r\n            mCountry = binding.textViewCountry.getText().toString();\r\n\r\n            //회원정보 수정 요청 메소드 호출\r\n            requestUpdateProfile(new ProfileData(mName, mCountry));\r\n        });\r\n        //다이얼로그 Cancel 버튼 클릭 이벤트\r\n        builder.setNegativeButton(\"Cancel\", (dialog, which) -> dialog.cancel());\r\n\r\n        //NameEdit 버튼 클릭 이벤트\r\n        final AlertDialog alertDialog = builder.create();\r\n        binding.buttonNameEdit.setOnClickListener(v -> alertDialog.show());\r\n    }\r\n\r\n    //CountryEdit 다이얼로그 설정\r\n    void setCountryAlertDialog() {\r\n        //String-Array -> ArrayList로 변환\r\n        ArrayList<String> arrayListCountry =\r\n                new ArrayList<>(Arrays.asList(getResources().getStringArray(R.array.country)));\r\n        //CountryEdit 다이얼로그 구현\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.AlertDialog);\r\n        builder.setItems(R.array.country, (dialog, which) -> {\r\n            mName = binding.textViewName.getText().toString();\r\n            mCountry = arrayListCountry.get(which);\r\n\r\n            //회원정보 수정 요청 메소드 호출\r\n            requestUpdateProfile(new ProfileData(mName, mCountry));\r\n        });\r\n        //CountryEdit 버튼 이벤트\r\n        final AlertDialog alertDialog = builder.create();\r\n        binding.buttonCountryEdit.setOnClickListener(v -> alertDialog.show());\r\n    }\r\n\r\n    //SignOut 버튼 클릭 이벤트 : 로그아웃\r\n    public void signOutButtonClick(View view) {\r\n        PreferenceManager.removeKey(\"user_token\"); //Token 삭제\r\n        //로그인 페이지로 이동 => 스택 비우는 코드 추가 필요!!! 이게 맞는 걸까?\r\n        Intent intent = new Intent(this, SignInActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK| Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(intent);\r\n    }\r\n\r\n    //DeleteAccount 버튼 클릭 이벤트 : 회원탈퇴\r\n    public void deleteAccountButtonClick(View view) {\r\n        //Alert을 한 번 띄워야할까? 나중에 고민하자..^^\r\n        //회원탈퇴 요청 메소드 호출\r\n        requestDeleteProfile();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/setting/SettingActivity.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/setting/SettingActivity.java	(date 1609057133424)
@@ -50,9 +50,8 @@
         setNameAlertDialog();
         setCountryAlertDialog();
 
-        //회원정보 요청 메소드 호출
+        //회원정보 요청
         requestReadProfile();
-        ProgressBarManager.showProgress(binding.progressBar, true);
     }
 
     @Override //Activity 뷰 바인딩
@@ -63,6 +62,7 @@
 
     //회원정보 요청 - GET : Retroifit2
     private void requestReadProfile() {
+        ProgressBarManager.showProgress(binding.progressBar, true);
         RetrofitClient.getService().readProfile().enqueue(new Callback<ProfileResponse>() {
             @Override
             public void onResponse(@NotNull Call<ProfileResponse> call, @NotNull Response<ProfileResponse> response) {
Index: app/src/main/java/com/example/travellet/network/ServiceAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.network;\r\n\r\nimport com.example.travellet.data.requestBody.PlaceLikeData;\r\nimport com.example.travellet.data.requestBody.PlanCreateData;\r\nimport com.example.travellet.data.requestBody.ProfileData;\r\nimport com.example.travellet.data.requestBody.TravelCreateData;\r\nimport com.example.travellet.data.responseBody.PlaceLikeResponse;\r\nimport com.example.travellet.data.responseBody.PlanCreateResponse;\r\nimport com.example.travellet.data.responseBody.ProfileResponse;\r\nimport com.example.travellet.data.requestBody.SignInData;\r\nimport com.example.travellet.data.responseBody.SignInResponse;\r\nimport com.example.travellet.data.requestBody.SignUpData;\r\nimport com.example.travellet.data.StatusResponse;\r\nimport com.example.travellet.data.responseBody.TravelCreateResponse;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Response;\r\nimport retrofit2.http.Body;\r\nimport retrofit2.http.DELETE;\r\nimport retrofit2.http.GET;\r\nimport retrofit2.http.HTTP;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.PUT;\r\nimport retrofit2.http.Path;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-18.\r\n * Class: ServiceAPI\r\n * Description: 서버와 통신을 위한 API 인터페이스\r\n */\r\npublic interface ServiceAPI {\r\n\r\n    @POST(\"/users/signin\") //로그인 요청\r\n    Call<SignInResponse> signIn(@Body SignInData data);\r\n    @POST(\"/users/signup\") //회원가입 요청\r\n    Call<StatusResponse> signUp(@Body SignUpData data);\r\n    @GET(\"/users\") //회원정보 요청\r\n    Call<ProfileResponse> readProfile();\r\n    @PUT(\"/users\") //회원정보 수정 요청\r\n    Call<StatusResponse> updateProfile(@Body ProfileData data);\r\n    @DELETE(\"/users\") //회원탈퇴 요청\r\n    Call<StatusResponse> deleteProfile();\r\n\r\n    @POST(\"/likes\") // 장소 좋아요 추가\r\n    Call<StatusResponse> createPlaceLike(@Body PlaceLikeData data);\r\n    @HTTP(method = \"DELETE\", path = (\"/likes\"), hasBody = true)//장소 좋아요 취소\r\n    Call<StatusResponse> cancelPlaceLike(@Body PlaceLikeData data);\r\n    @GET(\"/likes\") //장소 목록 조회\r\n    Call<PlaceLikeResponse> readPlaceLike();\r\n\r\n    @POST(\"/travels\") //여행 생성\r\n    Call<TravelCreateResponse> createTravel(@Body TravelCreateData data);\r\n\r\n    @POST(\"/travels/{travelid}/plans\") //일정 추가\r\n    Call<PlanCreateResponse> createPlan(@Path(\"travelid\") int travelId,  @Body PlanCreateData data);\r\n\r\n\r\n    //장소 검색\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/network/ServiceAPI.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/network/ServiceAPI.java	(date 1609121305071)
@@ -12,9 +12,9 @@
 import com.example.travellet.data.requestBody.SignUpData;
 import com.example.travellet.data.StatusResponse;
 import com.example.travellet.data.responseBody.TravelCreateResponse;
+import com.example.travellet.data.responseBody.TravelReadResponse;
 
 import retrofit2.Call;
-import retrofit2.Response;
 import retrofit2.http.Body;
 import retrofit2.http.DELETE;
 import retrofit2.http.GET;
@@ -22,6 +22,7 @@
 import retrofit2.http.POST;
 import retrofit2.http.PUT;
 import retrofit2.http.Path;
+import retrofit2.http.Query;
 
 /**
  * Created by 수연 on 2020-11-18.
@@ -50,10 +51,14 @@
 
     @POST("/travels") //여행 생성
     Call<TravelCreateResponse> createTravel(@Body TravelCreateData data);
+    @GET("/travels") //여행 목록 조회 요청
+    Call<TravelReadResponse> readTravelUpcoming(@Query("upcoming") String data);
+    @GET("/travels") //여행 목록 조회 요청
+    Call<TravelReadResponse> readTravelPast(@Query("past") String data);
+    @DELETE("/travels/{id}") //여행 삭제
+    Call<StatusResponse> deleteTravel(@Path("id") int id);
 
     @POST("/travels/{travelid}/plans") //일정 추가
     Call<PlanCreateResponse> createPlan(@Path("travelid") int travelId,  @Body PlanCreateData data);
 
-
-    //장소 검색
 }
Index: app/src/main/java/com/example/travellet/feature/travel/TravelViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/travel/TravelViewHolder.java	(date 1609123565394)
+++ app/src/main/java/com/example/travellet/feature/travel/TravelViewHolder.java	(date 1609123565394)
@@ -0,0 +1,35 @@
+package com.example.travellet.feature.travel;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.LinearLayoutManager;
+
+import com.example.travellet.data.responseBody.TravelReadResponse;
+import com.example.travellet.databinding.ItemRecyclerviewBinding;
+import com.example.travellet.feature.util.viewpager.ViewHolderPage;
+import com.example.travellet.feature.util.viewpager.ViewPagerData;
+
+import java.util.ArrayList;
+
+public class TravelViewHolder extends ViewHolderPage {
+    ItemRecyclerviewBinding binding;
+    public TravelViewHolder(@NonNull ItemRecyclerviewBinding binding) {
+        super(binding);
+        this.binding = binding;
+    }
+    public void onBind(ViewPagerData arrayList) {
+        //타입 체크 관련 방식 => https://dwenn.tistory.com/91
+        ArrayList<TravelReadResponse.Datum> data = new ArrayList<>();
+        if(arrayList.getData() != null){
+            for(Object object : arrayList.getData()) {
+                if(object instanceof TravelReadResponse.Datum) {
+                    data.add((TravelReadResponse.Datum) object);
+                }
+            }
+            TravelAdapter travelAdapter = new TravelAdapter(data);
+            binding.recyclerView.setLayoutManager(new LinearLayoutManager(arrayList.getContext()));
+            binding.recyclerView.setAdapter(travelAdapter);
+            //리사이클러뷰 변경사항 적용
+            travelAdapter.notifyDataSetChanged();
+        }
+    }
+}
Index: app/src/main/java/com/example/travellet/feature/util/viewpager/ViewHolderPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/viewpager/ViewHolderPage.java	(date 1609061800451)
+++ app/src/main/java/com/example/travellet/feature/util/viewpager/ViewHolderPage.java	(date 1609061800451)
@@ -0,0 +1,17 @@
+package com.example.travellet.feature.util.viewpager;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.travellet.databinding.ItemRecyclerviewBinding;
+
+/**
+ * Created by 수연 on 2020-12-25.
+ * Class: ViewHolderPage
+ * Description: 모듈화를 위한 기본 뷰 홀더
+ */
+public class ViewHolderPage extends RecyclerView.ViewHolder{
+    public ViewHolderPage(@NonNull ItemRecyclerviewBinding binding) {
+        super(binding.getRoot());
+    }
+}
Index: app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerCase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerCase.java	(date 1609061617690)
+++ app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerCase.java	(date 1609061617690)
@@ -0,0 +1,10 @@
+package com.example.travellet.feature.util.viewpager;
+
+/**
+ * Created by 수연 on 2020-12-25.
+ * Class: ViewPagerCase
+ * Description: 모듈화 시 뷰페이저 용도를 구분하기 위한 enum
+ */
+public enum  ViewPagerCase {
+    TRAVEL, BUDGET, EXPENSE
+}
Index: app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerAdapter.java	(date 1609062561001)
+++ app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerAdapter.java	(date 1609062561001)
@@ -0,0 +1,68 @@
+package com.example.travellet.feature.util.viewpager;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.travellet.databinding.ItemRecyclerviewBinding;
+import com.example.travellet.feature.plan.detail.BudgetViewHolder;
+import com.example.travellet.feature.plan.detail.ExpenseViewHolder;
+import com.example.travellet.feature.travel.TravelViewHolder;
+
+import java.util.ArrayList;
+
+/**
+ * Created by 수연 on 2020-12-27.
+ * Class: ViewPagerAdapter
+ * Description: 공통 뷰페이저 어댑터
+ */
+public class ViewPagerAdapter extends RecyclerView.Adapter<ViewHolderPage> {
+    private final ArrayList<ViewPagerData> arrayList;
+    private final ViewPagerCase viewPagerCase;
+
+    public ViewPagerAdapter(ArrayList<ViewPagerData> arrayList, ViewPagerCase viewPagerCase) {
+        this.arrayList = arrayList;
+        this.viewPagerCase = viewPagerCase;
+    }
+
+    //아이템 뷰를 위한 뷰 홀더 객체 생성하여 리턴
+    @NonNull
+    @Override
+    public ViewHolderPage onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        switch (viewPagerCase) {
+            case TRAVEL:
+                return new TravelViewHolder(ItemRecyclerviewBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
+            case BUDGET:
+                return new BudgetViewHolder(ItemRecyclerviewBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
+            case EXPENSE:
+                return new ExpenseViewHolder(ItemRecyclerviewBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
+            default:
+                return null;
+        }
+    }
+
+    //position에 해당하는 데이터를 뷰 홀더의 아이템 뷰에 표시
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolderPage holder, int position) {
+        //instaceof는 객체 타입 확인하는데 사용.
+        if(holder instanceof TravelViewHolder) { //여행
+            TravelViewHolder travelViewHolder = (TravelViewHolder) holder;
+            travelViewHolder.onBind(arrayList.get(position));
+        } else if(holder instanceof BudgetViewHolder) { //예산
+            BudgetViewHolder budgetViewHolder = (BudgetViewHolder) holder;
+            budgetViewHolder.onBind(arrayList.get(position));
+
+        } else if(holder instanceof ExpenseViewHolder) { //지출
+            ExpenseViewHolder expenseViewHolder = (ExpenseViewHolder) holder;
+            expenseViewHolder.onBind(arrayList.get(position));
+        }
+    }
+
+    //리사클러뷰 아이템 개수 리턴 : 필수적으로 지정해주어야 함!
+    @Override
+    public int getItemCount() {
+        return arrayList.size();
+    }
+}
Index: app/src/main/res/layout/item_recyclerview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_recyclerview.xml	(date 1609050925584)
+++ app/src/main/res/layout/item_recyclerview.xml	(date 1609050925584)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/feature/plan/detail/BudgetViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/detail/BudgetViewHolder.java	(date 1609086300725)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/BudgetViewHolder.java	(date 1609086300725)
@@ -0,0 +1,34 @@
+package com.example.travellet.feature.plan.detail;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.LinearLayoutManager;
+
+import com.example.travellet.data.responseBody.TravelReadResponse;
+import com.example.travellet.databinding.ItemRecyclerviewBinding;
+import com.example.travellet.feature.travel.TravelAdapter;
+import com.example.travellet.feature.util.viewpager.ViewHolderPage;
+import com.example.travellet.feature.util.viewpager.ViewPagerData;
+
+import java.util.ArrayList;
+
+public class BudgetViewHolder extends ViewHolderPage {
+    ItemRecyclerviewBinding binding;
+    public BudgetViewHolder(@NonNull ItemRecyclerviewBinding binding) {
+        super(binding);
+        this.binding = binding;
+    }
+    public void onBind(ViewPagerData arrayList) {
+        //타입 체크 관련 방식 => https://dwenn.tistory.com/91
+        ArrayList<TravelReadResponse.Datum> data = new ArrayList<>();
+        if(arrayList.getData() instanceof ArrayList<?>){
+            for(Object object : arrayList.getData()) {
+                if(object instanceof TravelReadResponse.Datum) {
+                    data.add((TravelReadResponse.Datum) object);
+                }
+            }
+            TravelAdapter travelAdapter = new TravelAdapter(data);
+            binding.recyclerView.setLayoutManager(new LinearLayoutManager(arrayList.getContext()));
+            binding.recyclerView.setAdapter(travelAdapter);
+        }
+    }
+}
Index: app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseViewHolder.java	(date 1609086300704)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseViewHolder.java	(date 1609086300704)
@@ -0,0 +1,34 @@
+package com.example.travellet.feature.plan.detail;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.LinearLayoutManager;
+
+import com.example.travellet.data.responseBody.TravelReadResponse;
+import com.example.travellet.databinding.ItemRecyclerviewBinding;
+import com.example.travellet.feature.travel.TravelAdapter;
+import com.example.travellet.feature.util.viewpager.ViewHolderPage;
+import com.example.travellet.feature.util.viewpager.ViewPagerData;
+
+import java.util.ArrayList;
+
+public class ExpenseViewHolder extends ViewHolderPage {
+    ItemRecyclerviewBinding binding;
+    public ExpenseViewHolder(@NonNull ItemRecyclerviewBinding binding) {
+        super(binding);
+        this.binding = binding;
+    }
+    public void onBind(ViewPagerData arrayList) {
+        //타입 체크 관련 방식 => https://dwenn.tistory.com/91
+        ArrayList<TravelReadResponse.Datum> data = new ArrayList<>();
+        if(arrayList.getData() instanceof ArrayList<?>){
+            for(Object object : arrayList.getData()) {
+                if(object instanceof TravelReadResponse.Datum) {
+                    data.add((TravelReadResponse.Datum) object);
+                }
+            }
+            TravelAdapter travelAdapter = new TravelAdapter(data);
+            binding.recyclerView.setLayoutManager(new LinearLayoutManager(arrayList.getContext()));
+            binding.recyclerView.setAdapter(travelAdapter);
+        }
+    }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.travellet\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:name=\".feature.util.MyApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity\r\n            android:name=\".feature.util.SplashActivity\"\r\n            android:theme=\"@style/SplashTheme\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".feature.util.BaseActivity\" />\r\n        <activity android:name=\".feature.sign.SignInActivity\" />\r\n        <activity android:name=\".feature.sign.SignUp1Activity\" />\r\n        <activity android:name=\".feature.sign.SignUp2Activity\" />\r\n        <activity android:name=\".feature.setting.SettingActivity\" />\r\n        <activity android:name=\".feature.travel.TravelActivity\" />\r\n        <activity android:name=\".feature.travel.SetTitleActivity\" />\r\n        <activity android:name=\".feature.travel.SetDateActivity\" />\r\n        <activity android:name=\".feature.travel.SetBudgetActivity\" />\r\n        <activity android:name=\".feature.place.PlaceActivity\" />\r\n        <activity android:name=\".feature.place.PlaceDetailActivity\" />\r\n        <activity android:name=\".feature.plan.PlanActivity\">\r\n        </activity>\r\n        <activity android:name=\".feature.plan.AddPlanActivity\" />\r\n        <activity android:name=\".feature.plan.AddPlace.AddPlaceActivity\" />\r\n        <activity android:name=\".feature.plan.DistributeBudgetActivity\" />\r\n        <activity android:name=\".feature.plan.PlanDetailActivity\" />\r\n        <activity android:name=\".feature.plan.input.InputCostActivity\" />\r\n        <activity android:name=\".feature.plan.input.InputBudgetActivity\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"AIzaSyCvnWf43FkeqO5OhkhsuX4V2_qzfZcDB3o\" />\r\n\r\n        <uses-library\r\n            android:name=\"org.apache.http.legacy\"\r\n            android:required=\"false\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/AndroidManifest.xml	(date 1609048432837)
@@ -34,12 +34,11 @@
         <activity android:name=".feature.travel.SetBudgetActivity" />
         <activity android:name=".feature.place.PlaceActivity" />
         <activity android:name=".feature.place.PlaceDetailActivity" />
-        <activity android:name=".feature.plan.PlanActivity">
-        </activity>
+        <activity android:name=".feature.plan.PlanActivity" />
         <activity android:name=".feature.plan.AddPlanActivity" />
         <activity android:name=".feature.plan.AddPlace.AddPlaceActivity" />
         <activity android:name=".feature.plan.DistributeBudgetActivity" />
-        <activity android:name=".feature.plan.PlanDetailActivity" />
+        <activity android:name=".feature.plan.detail.PlanDetailActivity" />
         <activity android:name=".feature.plan.input.InputCostActivity" />
         <activity android:name=".feature.plan.input.InputBudgetActivity" />
 
@@ -51,5 +50,4 @@
             android:name="org.apache.http.legacy"
             android:required="false" />
     </application>
-
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/data/responseBody/ProfileResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.data.responseBody;\r\n\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\n/**\r\n * Created by 수연 on 2020-11-18.\r\n * Class: SettingResponse\r\n * Description: 프로필 조회 요청 데이터\r\n */\r\npublic class ProfileResponse {\r\n    @SerializedName(\"status\")\r\n    private Integer status;\r\n    @SerializedName(\"success\")\r\n    private Boolean success;\r\n    @SerializedName(\"message\")\r\n    private String message;\r\n    @SerializedName(\"data\")\r\n    private Data data;\r\n\r\n    public Integer getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public Boolean getSuccess() {\r\n        return success;\r\n    }\r\n\r\n    public String getMessage() {\r\n        return message;\r\n    }\r\n\r\n    public Data getData() {\r\n        return data;\r\n    }\r\n\r\n    public static class Data {\r\n        @SerializedName(\"email\")\r\n        private String email;\r\n        @SerializedName(\"name\")\r\n        private String name;\r\n        @SerializedName(\"country\")\r\n        private String country;\r\n\r\n        public String getEmail() {\r\n            return email;\r\n        }\r\n\r\n        public String getName() {\r\n            return name;\r\n        }\r\n\r\n        public String getCountry() {\r\n            return country;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/data/responseBody/ProfileResponse.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/data/responseBody/ProfileResponse.java	(date 1608483947087)
@@ -5,7 +5,7 @@
 /**
  * Created by 수연 on 2020-11-18.
  * Class: SettingResponse
- * Description: 프로필 조회 요청 데이터
+ * Description: 프로필 조회 응답 데이터
  */
 public class ProfileResponse {
     @SerializedName("status")
Index: app/src/main/java/com/example/travellet/data/responseBody/TravelReadResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/data/responseBody/TravelReadResponse.java	(date 1608714745178)
+++ app/src/main/java/com/example/travellet/data/responseBody/TravelReadResponse.java	(date 1608714745178)
@@ -0,0 +1,82 @@
+package com.example.travellet.data.responseBody;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+/**
+ * Created by 수연 on 2020-12-21.
+ * Class: TravelReadResponse
+ * Description: 여행 목록 조회 응답 데이터
+ */
+public class TravelReadResponse {
+    @SerializedName("status")
+    private Integer status;
+    @SerializedName("success")
+    private Boolean success;
+    @SerializedName("message")
+    private String message;
+    @SerializedName("data")
+    private List<Datum> data = null;
+
+    public Integer getStatus() {
+        return status;
+    }
+
+    public Boolean getSuccess() {
+        return success;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public List<Datum> getData() {
+        return data;
+    }
+
+    public class Datum {
+        @SerializedName("id")
+        private Integer id;
+        @SerializedName("title")
+        private String title;
+        @SerializedName("startDate")
+        private String startDate;
+        @SerializedName("endDate")
+        private String endDate;
+        @SerializedName("budget")
+        private Double budget;
+        @SerializedName("sumBudget")
+        private Double sumBudget;
+        @SerializedName("sumExpense")
+        private Double sumExpense;
+
+        public Integer getId() {
+            return id;
+        }
+
+        public String getTitle() {
+            return title;
+        }
+
+        public String getStartDate() {
+            return startDate;
+        }
+
+        public String getEndDate() {
+            return endDate;
+        }
+
+        public Double getBudget() {
+            return budget;
+        }
+
+        public Double getSumBudget() {
+            return sumBudget;
+        }
+
+        public Double getSumExpense() {
+            return sumExpense;
+        }
+    }
+}
Index: app/src/main/res/layout/fragment_expense.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/white\"\r\n    tools:context=\".feature.plan.ExpenseFragment\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_title\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:fontFamily=\"@font/noto_sans_medium\"\r\n            android:textSize=\"16sp\"\r\n            android:textColor=\"@color/four_grey\"\r\n            android:includeFontPadding=\"false\"\r\n            app:layout_constrainedWidth=\"true\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/text_view_dday\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_memo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"4dp\"\r\n            android:textColor=\"@color/icon_grey\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_title\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_dday\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_marginEnd=\"24dp\"\r\n            android:background=\"@drawable/bg_chip\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:paddingStart=\"16dp\"\r\n            android:paddingTop=\"4dp\"\r\n            android:paddingEnd=\"16dp\"\r\n            android:paddingBottom=\"4dp\"\r\n            android:textColor=\"@color/text_blue\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <View\r\n            android:id=\"@+id/line\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"8dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:background=\"@color/bg_grey_10\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_memo\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_total\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/icon_grey\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/line\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/recycler_view_expense\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_total\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_expense.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/layout/fragment_expense.xml	(date 1608484716372)
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@android:color/white"
-    tools:context=".feature.plan.ExpenseFragment">
+    tools:context=".feature.plan.detail.ExpenseFragment">
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
Index: app/src/main/res/layout/activity_travel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/white\"\r\n    tools:context=\".feature.travel.TravelActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/button_search\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"56dp\"\r\n        android:background=\"@null\"\r\n        android:drawableStart=\"@drawable/ic_search24_dp\"\r\n        android:drawablePadding=\"24dp\"\r\n        android:fontFamily=\"@font/noto_sans_demilight\"\r\n        android:gravity=\"center_vertical\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        android:minWidth=\"0dp\"\r\n        android:minHeight=\"0dp\"\r\n        android:onClick=\"searchButtonClick\"\r\n        android:paddingStart=\"16dp\"\r\n        android:paddingEnd=\"16dp\"\r\n        android:text=\"@string/search_the_place\"\r\n        android:textAllCaps=\"false\"\r\n        android:textColor=\"@color/hint_grey\"\r\n        android:textSize=\"16sp\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/button_setting\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/button_setting\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@null\"\r\n        android:contentDescription=\"@string/setting\"\r\n        android:onClick=\"settingButtonClick\"\r\n        android:padding=\"16dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:srcCompat=\"@drawable/ic_settings_24dp\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button_upcoming\"\r\n        android:layout_width=\"90dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:background=\"@drawable/bg_underline_gradation\"\r\n        android:fontFamily=\"@font/noto_sans_medium\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        android:minWidth=\"0dp\"\r\n        android:minHeight=\"0dp\"\r\n        android:onClick=\"upcomingButtonClick\"\r\n        android:stateListAnimator=\"@null\"\r\n        android:text=\"@string/upcomig\"\r\n        android:textColor=\"@color/text_blue\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button_search\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button_past\"\r\n        android:layout_width=\"90dp\"\r\n        android:layout_height=\"48dp\"\r\n        android:background=\"@null\"\r\n        android:fontFamily=\"@font/noto_sans_medium\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        android:minWidth=\"0dp\"\r\n        android:minHeight=\"0dp\"\r\n        android:onClick=\"pastButtonClick\"\r\n        android:stateListAnimator=\"@null\"\r\n        android:text=\"@string/past\"\r\n        android:textColor=\"@color/icon_grey\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/button_upcoming\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button_search\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/button_add\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginEnd=\"12dp\"\r\n        android:background=\"@null\"\r\n        android:contentDescription=\"@string/add\"\r\n        android:minWidth=\"0dp\"\r\n        android:minHeight=\"0dp\"\r\n        android:onClick=\"addButtonClick\"\r\n        android:padding=\"12dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button_search\"\r\n        app:srcCompat=\"@drawable/ic_add_24dp\" />\r\n\r\n    <View\r\n        android:id=\"@+id/line\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0.5dp\"\r\n        android:background=\"@color/hint_grey\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button_upcoming\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recycler_view_travel\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/line\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_travel.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/layout/activity_travel.xml	(date 1609050737849)
@@ -7,6 +7,18 @@
     android:background="@android:color/white"
     tools:context=".feature.travel.TravelActivity">
 
+    <ProgressBar
+        android:id="@+id/progress_bar"
+        style="?android:attr/progressBarStyle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:indeterminateTint="@color/text_blue"
+        android:indeterminateTintMode="src_in"
+        app:layout_constraintBottom_toBottomOf="@+id/view_pager2"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/line" />
+
     <Button
         android:id="@+id/button_search"
         android:layout_width="0dp"
@@ -20,7 +32,6 @@
         android:letterSpacing="0.03"
         android:minWidth="0dp"
         android:minHeight="0dp"
-        android:onClick="searchButtonClick"
         android:paddingStart="16dp"
         android:paddingEnd="16dp"
         android:text="@string/search_the_place"
@@ -38,46 +49,26 @@
         android:layout_height="wrap_content"
         android:background="@null"
         android:contentDescription="@string/setting"
-        android:onClick="settingButtonClick"
         android:padding="16dp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:srcCompat="@drawable/ic_settings_24dp" />
 
-    <Button
-        android:id="@+id/button_upcoming"
-        android:layout_width="90dp"
-        android:layout_height="48dp"
+    <com.google.android.material.tabs.TabLayout
+        android:id="@+id/tabs"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
-        android:background="@drawable/bg_underline_gradation"
-        android:fontFamily="@font/noto_sans_medium"
-        android:includeFontPadding="false"
-        android:letterSpacing="0.03"
-        android:minWidth="0dp"
-        android:minHeight="0dp"
-        android:onClick="upcomingButtonClick"
-        android:stateListAnimator="@null"
-        android:text="@string/upcomig"
-        android:textColor="@color/text_blue"
+        app:layout_constraintEnd_toStartOf="@+id/button_add"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintHorizontal_chainStyle="spread_inside"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/button_search" />
-
-    <Button
-        android:id="@+id/button_past"
-        android:layout_width="90dp"
-        android:layout_height="48dp"
-        android:background="@null"
-        android:fontFamily="@font/noto_sans_medium"
-        android:includeFontPadding="false"
-        android:letterSpacing="0.03"
-        android:minWidth="0dp"
-        android:minHeight="0dp"
-        android:onClick="pastButtonClick"
-        android:stateListAnimator="@null"
-        android:text="@string/past"
-        android:textColor="@color/icon_grey"
-        app:layout_constraintStart_toEndOf="@+id/button_upcoming"
-        app:layout_constraintTop_toBottomOf="@+id/button_search" />
+        app:layout_constraintTop_toBottomOf="@+id/button_search"
+        app:tabIndicatorColor="@color/text_blue"
+        app:tabMode="scrollable"
+        app:tabSelectedTextColor="@color/text_blue"
+        app:tabTextAppearance="@style/TabText"
+        app:tabTextColor="@color/icon_grey"/>
 
     <ImageButton
         android:id="@+id/button_add"
@@ -88,9 +79,9 @@
         android:contentDescription="@string/add"
         android:minWidth="0dp"
         android:minHeight="0dp"
-        android:onClick="addButtonClick"
         android:padding="12dp"
         app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/tabs"
         app:layout_constraintTop_toBottomOf="@+id/button_search"
         app:srcCompat="@drawable/ic_add_24dp" />
 
@@ -101,14 +92,17 @@
         android:background="@color/hint_grey"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/button_upcoming" />
+        app:layout_constraintTop_toBottomOf="@+id/tabs" />
 
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/recycler_view_travel"
+    <androidx.viewpager2.widget.ViewPager2
+        android:id="@+id/view_pager2"
         android:layout_width="0dp"
-        android:layout_height="wrap_content"
+        android:layout_height="0dp"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/line" />
+        app:layout_constraintTop_toBottomOf="@+id/line"
+        app:layout_constraintVertical_bias="0.0" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/feature/plan/detail/BudgetAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/detail/BudgetAdapter.java	(date 1609085446384)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/BudgetAdapter.java	(date 1609085446384)
@@ -0,0 +1,40 @@
+package com.example.travellet.feature.plan.detail;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.travellet.databinding.ItemBudgetBinding;
+
+class BudgetAdapter extends RecyclerView.Adapter<BudgetAdapter.ViewHolder> {
+
+    //아이템 뷰를 위한 뷰 홀더 객체 생성하여 리턴
+    @NonNull
+    @Override
+    public BudgetAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        return new ViewHolder(ItemBudgetBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
+    }
+
+    //position에 해당하는 데이터를 뷰 홀더의 아이템 뷰에 표시
+    @Override
+    public void onBindViewHolder(@NonNull BudgetAdapter.ViewHolder holder, int position) {
+
+    }
+
+    //리사클러뷰 아이템 개수 리턴 : 필수적으로 지정해주어야 함!
+    @Override
+    public int getItemCount() {
+        return 0;
+    }
+
+    //아이템 뷰를 저장하는 뷰 홀더 클래스
+    public static class ViewHolder extends  RecyclerView.ViewHolder{
+        ItemBudgetBinding binding;
+        public ViewHolder(@NonNull ItemBudgetBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+        }
+    }
+}
Index: app/src/main/res/layout/fragment_budget.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/white\"\r\n    tools:context=\".feature.plan.BudgetFragment\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_title\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:fontFamily=\"@font/noto_sans_medium\"\r\n            android:textSize=\"16sp\"\r\n            android:textColor=\"@color/four_grey\"\r\n            android:includeFontPadding=\"false\"\r\n            app:layout_constrainedWidth=\"true\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/text_view_dday\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_memo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"4dp\"\r\n            android:textColor=\"@color/icon_grey\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_title\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_dday\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_marginEnd=\"24dp\"\r\n            android:background=\"@drawable/bg_chip\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:paddingStart=\"16dp\"\r\n            android:paddingTop=\"4dp\"\r\n            android:paddingEnd=\"16dp\"\r\n            android:paddingBottom=\"4dp\"\r\n            android:textColor=\"@color/text_blue\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <View\r\n            android:id=\"@+id/line\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"8dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:background=\"@color/bg_grey_10\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_memo\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_view_total\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/icon_grey\"\r\n            android:fontFamily=\"@font/noto_sans_regular\"\r\n            android:includeFontPadding=\"false\"\r\n            android:letterSpacing=\"0.03\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/line\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/recycler_view_budget\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/text_view_total\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_budget.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/layout/fragment_budget.xml	(date 1608484716358)
@@ -5,7 +5,7 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@android:color/white"
-    tools:context=".feature.plan.BudgetFragment">
+    tools:context=".feature.plan.detail.BudgetFragment">
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
Index: app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseAdapter.java	(date 1609085446370)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseAdapter.java	(date 1609085446370)
@@ -0,0 +1,39 @@
+package com.example.travellet.feature.plan.detail;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.travellet.databinding.ItemExpenseBinding;
+
+//아이템 뷰를 위한 뷰 홀더 객체 생성하여 리턴
+class ExpenseAdapter extends RecyclerView.Adapter<ExpenseAdapter.ViewHolder> {
+    @NonNull
+    @Override
+    public ExpenseAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        return new ViewHolder(ItemExpenseBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false));
+    }
+
+    //position에 해당하는 데이터를 뷰 홀더의 아이템 뷰에 표시
+    @Override
+    public void onBindViewHolder(@NonNull ExpenseAdapter.ViewHolder holder, int position) {
+
+    }
+
+    //리사클러뷰 아이템 개수 리턴 : 필수적으로 지정해주어야 함!
+    @Override
+    public int getItemCount() {
+        return 0;
+    }
+
+    //아이템 뷰를 저장하는 뷰 홀더 클래스
+    public static class ViewHolder extends RecyclerView.ViewHolder{
+        ItemExpenseBinding binding;
+        public ViewHolder(@NonNull ItemExpenseBinding binding) {
+            super(binding.getRoot());
+            this.binding = binding;
+        }
+    }
+}
Index: app/src/main/res/layout/item_travel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_view_title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:fontFamily=\"@font/noto_sans_medium\"\r\n        android:includeFontPadding=\"false\"\r\n        android:textColor=\"@color/soft_black\"\r\n        android:textSize=\"16sp\"\r\n        app:layout_constrainedWidth=\"true\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/text_view_dday\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_view_dday\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_marginEnd=\"24dp\"\r\n        android:fontFamily=\"@font/noto_sans_regular\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        android:paddingStart=\"16dp\"\r\n        android:paddingTop=\"4dp\"\r\n        android:paddingEnd=\"16dp\"\r\n        android:paddingBottom=\"4dp\"\r\n        android:background=\"@drawable/bg_chip\"\r\n        android:textColor=\"@color/text_blue\"\r\n        android:textSize=\"12sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_view_period\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"4dp\"\r\n        android:textColor=\"@color/icon_grey\"\r\n        android:textSize=\"12sp\"\r\n        android:fontFamily=\"@font/noto_sans_regular\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/text_view_title\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progress_bar_budget\"\r\n        android:max=\"100\"\r\n        android:progress=\"50\"\r\n        style=\"?android:attr/progressBarStyleHorizontal\"\r\n        android:progressDrawable=\"@drawable/progressbar\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"8dp\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginEnd=\"24dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/text_view_period\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_view_budget\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"24dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:textColor=\"@color/icon_grey\"\r\n        android:textSize=\"12sp\"\r\n        android:fontFamily=\"@font/noto_sans_regular\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/progress_bar_budget\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/text_view_budget_percent\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"24dp\"\r\n        android:textColor=\"@color/icon_grey\"\r\n        android:textSize=\"12sp\"\r\n        android:fontFamily=\"@font/noto_sans_medium\"\r\n        android:includeFontPadding=\"false\"\r\n        android:letterSpacing=\"0.03\"\r\n        android:gravity=\"end\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/progress_bar_budget\" />\r\n\r\n    <View\r\n        android:id=\"@+id/line\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"0.5dp\"\r\n        android:background=\"@color/hint_grey\"\r\n        android:layout_marginTop=\"20dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/text_view_budget\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_travel.xml	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/res/layout/item_travel.xml	(date 1608732196485)
@@ -1,9 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="wrap_content">
 
     <TextView
         android:id="@+id/text_view_title"
@@ -28,6 +27,7 @@
         android:layout_height="wrap_content"
         android:layout_marginTop="20dp"
         android:layout_marginEnd="24dp"
+        android:background="@drawable/bg_chip"
         android:fontFamily="@font/noto_sans_regular"
         android:includeFontPadding="false"
         android:letterSpacing="0.03"
@@ -35,78 +35,75 @@
         android:paddingTop="4dp"
         android:paddingEnd="16dp"
         android:paddingBottom="4dp"
-        android:background="@drawable/bg_chip"
         android:textColor="@color/text_blue"
         android:textSize="12sp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
 
     <TextView
-        android:id="@+id/text_view_period"
+        android:id="@+id/text_view_date"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
         android:layout_marginTop="4dp"
-        android:textColor="@color/icon_grey"
-        android:textSize="12sp"
         android:fontFamily="@font/noto_sans_regular"
         android:includeFontPadding="false"
         android:letterSpacing="0.03"
+        android:textColor="@color/icon_grey"
+        android:textSize="12sp"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/text_view_title" />
 
     <ProgressBar
-        android:id="@+id/progress_bar_budget"
-        android:max="100"
-        android:progress="50"
+        android:id="@+id/progress_bar_expense"
         style="?android:attr/progressBarStyleHorizontal"
-        android:progressDrawable="@drawable/progressbar"
         android:layout_width="0dp"
         android:layout_height="8dp"
         android:layout_marginStart="24dp"
         android:layout_marginTop="16dp"
         android:layout_marginEnd="24dp"
+        android:progressDrawable="@drawable/progressbar"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/text_view_period" />
+        app:layout_constraintTop_toBottomOf="@+id/text_view_date" />
 
     <TextView
-        android:id="@+id/text_view_budget"
+        android:id="@+id/text_view_expense"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
         android:layout_marginTop="8dp"
-        android:textColor="@color/icon_grey"
-        android:textSize="12sp"
         android:fontFamily="@font/noto_sans_regular"
         android:includeFontPadding="false"
         android:letterSpacing="0.03"
+        android:textColor="@color/icon_grey"
+        android:textSize="12sp"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/progress_bar_budget" />
+        app:layout_constraintTop_toBottomOf="@+id/progress_bar_expense" />
 
     <TextView
-        android:id="@+id/text_view_budget_percent"
+        android:id="@+id/text_view_expense_percent"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginTop="8dp"
         android:layout_marginEnd="24dp"
-        android:textColor="@color/icon_grey"
-        android:textSize="12sp"
         android:fontFamily="@font/noto_sans_medium"
+        android:gravity="end"
         android:includeFontPadding="false"
         android:letterSpacing="0.03"
-        android:gravity="end"
+        android:textColor="@color/icon_grey"
+        android:textSize="12sp"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/progress_bar_budget" />
+        app:layout_constraintTop_toBottomOf="@+id/progress_bar_expense" />
 
     <View
         android:id="@+id/line"
         android:layout_width="0dp"
         android:layout_height="0.5dp"
-        android:background="@color/hint_grey"
         android:layout_marginTop="20dp"
+        android:background="@color/hint_grey"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/text_view_budget" />
+        app:layout_constraintTop_toBottomOf="@+id/text_view_expense" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/travellet/data/responseBody/TestResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/data/responseBody/TestResponse.java	(date 1610062172938)
+++ app/src/main/java/com/example/travellet/data/responseBody/TestResponse.java	(date 1610062172938)
@@ -0,0 +1,306 @@
+package com.example.travellet.data.responseBody;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class TestResponse {
+
+    @SerializedName("status")
+    @Expose
+    private Integer status;
+    @SerializedName("success")
+    @Expose
+    private Boolean success;
+    @SerializedName("message")
+    @Expose
+    private String message;
+    @SerializedName("Users")
+    @Expose
+    private Users users;
+    @SerializedName("ProjectApplicants")
+    @Expose
+    private final List<ProjectApplicant> projectApplicants = null;
+    @SerializedName("Projects")
+    @Expose
+    private final List<Project> projects = null;
+    @SerializedName("Members")
+    @Expose
+    private final List<Member> members = null;
+
+    public Integer getStatus() {
+        return status;
+    }
+    public Boolean getSuccess() {
+        return success;
+    }
+    public String getMessage() {
+        return message;
+    }
+    public Users getUsers() {
+        return users;
+    }
+    public List<ProjectApplicant> getProjectApplicants() {
+        return projectApplicants;
+    }
+    public List<Project> getProjects() {
+        return projects;
+    }
+    public List<Member> getMembers() {
+        return members;
+    }
+
+    public static class Users {
+        @SerializedName("img")
+        @Expose
+        private String img;
+        @SerializedName("name")
+        @Expose
+        private String name;
+        @SerializedName("largeAddress")
+        @Expose
+        private String largeAddress;
+        @SerializedName("smallAddress")
+        @Expose
+        private String smallAddress;
+        @SerializedName("projectApplicantCount")
+        @Expose
+        private Integer projectApplicantCount;
+        @SerializedName("projectCount")
+        @Expose
+        private Integer projectCount;
+        @SerializedName("memberCount")
+        @Expose
+        private Integer memberCount;
+
+        public String getImg() {
+            return img;
+        }
+        public String getName() {
+            return name;
+        }
+        public String getLargeAddress() {
+            return largeAddress;
+        }
+        public String getSmallAddress() {
+            return smallAddress;
+        }
+        public Integer getProjectApplicantCount() {
+            return projectApplicantCount;
+        }
+        public Integer getProjectCount() {
+            return projectCount;
+        }
+        public Integer getMemberCount() {
+            return memberCount;
+        }
+    }
+    public static class ProjectApplicant {
+
+        @SerializedName("id")
+        @Expose
+        private Integer id;
+        @SerializedName("limitUniv")
+        @Expose
+        private String limitUniv;
+        @SerializedName("largeAddress")
+        @Expose
+        private String largeAddress;
+        @SerializedName("smallAddress")
+        @Expose
+        private String smallAddress;
+        @SerializedName("startDate")
+        @Expose
+        private String startDate;
+        @SerializedName("endDate")
+        @Expose
+        private String endDate;
+        @SerializedName("title")
+        @Expose
+        private String title;
+        @SerializedName("type")
+        @Expose
+        private String type;
+        @SerializedName("field")
+        @Expose
+        private String field;
+        @SerializedName("ProjectPositions")
+        @Expose
+        private final List<ProjectPosition> projectPositions = null;
+
+        public Integer getId() {
+            return id;
+        }
+        public String getLimitUniv() {
+            return limitUniv;
+        }
+        public String getLargeAddress() {
+            return largeAddress;
+        }
+        public String getSmallAddress() {
+            return smallAddress;
+        }
+        public String getStartDate() {
+            return startDate;
+        }
+        public String getEndDate() {
+            return endDate;
+        }
+        public String getTitle() {
+            return title;
+        }
+        public String getType() {
+            return type;
+        }
+        public String getField() {
+            return field;
+        }
+        public List<ProjectPosition> getProjectPositions() {
+            return projectPositions;
+        }
+
+        public static class ProjectPosition {
+
+            @SerializedName("position")
+            @Expose
+            private String position;
+            @SerializedName("headCount")
+            @Expose
+            private Integer headCount;
+
+            public String getPosition() {
+                return position;
+            }
+            public Integer getHeadCount() {
+                return headCount;
+            }
+        }
+    }
+    public static class Member {
+
+        @SerializedName("id")
+        @Expose
+        private Integer id;
+        @SerializedName("title")
+        @Expose
+        private String title;
+        @SerializedName("type")
+        @Expose
+        private String type;
+        @SerializedName("field")
+        @Expose
+        private String field;
+        @SerializedName("MemberPositions")
+        @Expose
+        private final List<MemberPosition> memberPositions = null;
+
+        public Integer getId() {
+            return id;
+        }
+        public String getTitle() {
+            return title;
+        }
+        public String getType() {
+            return type;
+        }
+        public String getField() {
+            return field;
+        }
+        public List<MemberPosition> getMemberPositions() {
+            return memberPositions;
+        }
+
+        public static class MemberPosition {
+
+            @SerializedName("position")
+            @Expose
+            private String position;
+
+            public String getPosition() {
+                return position;
+            }
+        }
+    }
+    public static class Project {
+
+        @SerializedName("id")
+        @Expose
+        private Integer id;
+        @SerializedName("limitUniv")
+        @Expose
+        private String limitUniv;
+        @SerializedName("largeAddress")
+        @Expose
+        private String largeAddress;
+        @SerializedName("smallAddress")
+        @Expose
+        private String smallAddress;
+        @SerializedName("startDate")
+        @Expose
+        private String startDate;
+        @SerializedName("endDate")
+        @Expose
+        private String endDate;
+        @SerializedName("title")
+        @Expose
+        private String title;
+        @SerializedName("type")
+        @Expose
+        private String type;
+        @SerializedName("field")
+        @Expose
+        private String field;
+        @SerializedName("ProjectPositions")
+        @Expose
+        private final List<ProjectPosition_> projectPositions = null;
+
+        public Integer getId() {
+            return id;
+        }
+        public String getLimitUniv() {
+            return limitUniv;
+        }
+        public String getLargeAddress() {
+            return largeAddress;
+        }
+        public String getSmallAddress() {
+            return smallAddress;
+        }
+        public String getStartDate() {
+            return startDate;
+        }
+        public String getEndDate() {
+            return endDate;
+        }
+        public String getTitle() {
+            return title;
+        }
+        public String getType() {
+            return type;
+        }
+        public String getField() {
+            return field;
+        }
+        public List<ProjectPosition_> getProjectPositions() {
+            return projectPositions;
+        }
+
+        public static class ProjectPosition_ {
+
+            @SerializedName("position")
+            @Expose
+            private String position;
+            @SerializedName("headCount")
+            @Expose
+            private Integer headCount;
+
+            public String getPosition() {
+                return position;
+            }
+            public Integer getHeadCount() {
+                return headCount;
+            }
+        }
+    }
+}
Index: app/src/main/java/com/example/travellet/feature/plan/PlanDetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.plan;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport com.example.travellet.R;\r\n\r\npublic class PlanDetailActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_plan_detail);\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/PlanDetailActivity.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/PlanDetailActivity.java	(date 1608484716388)
@@ -1,4 +1,4 @@
-package com.example.travellet.feature.plan;
+package com.example.travellet.feature.plan.detail;
 
 import androidx.appcompat.app.AppCompatActivity;
 
Index: app/src/main/java/com/example/travellet/feature/plan/ExpenseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.plan;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.travellet.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link ExpenseFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class ExpenseFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public ExpenseFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment ExpenseFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static ExpenseFragment newInstance(String param1, String param2) {\r\n        ExpenseFragment fragment = new ExpenseFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_expense, container, false);\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/ExpenseFragment.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/ExpenseFragment.java	(date 1608484716400)
@@ -1,4 +1,4 @@
-package com.example.travellet.feature.plan;
+package com.example.travellet.feature.plan.detail;
 
 import android.os.Bundle;
 
Index: app/src/main/java/com/example/travellet/feature/plan/BudgetFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.travellet.feature.plan;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.travellet.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link BudgetFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class BudgetFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public BudgetFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment budgetFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static BudgetFragment newInstance(String param1, String param2) {\r\n        BudgetFragment fragment = new BudgetFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_budget, container, false);\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/example/travellet/feature/plan/BudgetFragment.java	(revision 188a6d3a57dd1053558b07a15e34a437d593fe17)
+++ app/src/main/java/com/example/travellet/feature/plan/detail/BudgetFragment.java	(date 1608484716316)
@@ -1,4 +1,4 @@
-package com.example.travellet.feature.plan;
+package com.example.travellet.feature.plan.detail;
 
 import android.os.Bundle;
 
Index: app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerData.java	(date 1609061617824)
+++ app/src/main/java/com/example/travellet/feature/util/viewpager/ViewPagerData.java	(date 1609061617824)
@@ -0,0 +1,36 @@
+package com.example.travellet.feature.util.viewpager;
+
+import android.content.Context;
+import java.util.ArrayList;
+
+/**
+ * Created by 수연 on 2020-12-25.
+ * Class: ViewPagerData
+ * Description: 리사이클러뷰 사용 뷰페이저 공통 데이터
+ * => Context와 데이터를 담고 있는 ArrayList가 있음.
+ */
+public class ViewPagerData {
+    private Context context;
+    private ArrayList<?> arrayList;
+
+    public ViewPagerData(Context context, ArrayList<?> arrayList) {
+        this.context = context;
+        this.arrayList = arrayList;
+    }
+
+    public Context getContext() {
+        return context;
+    }
+
+    public void setContext(Context context) {
+        this.context = context;
+    }
+
+    public ArrayList<?> getData() {
+        return arrayList;
+    }
+
+    public void setData(ArrayList<?> arrayList) {
+        this.arrayList = arrayList;
+    }
+}
